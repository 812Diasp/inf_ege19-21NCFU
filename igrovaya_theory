from functools import lru_cache

#возможные ходы(менять в каждом задании)
def moves(h):
    return h + 1, h + 2, h * 3

#оптимизация рекурсии
@lru_cache(None)
def game(h):
    if h >= 37: return 'Win'
    if any(game(m) == "Win" for m in moves(h)): return 'P1'
    if all(game(m) == "P1" for m in moves(h)): return 'B1'
    if any(game(m) == "B1" for m in moves(h)): return 'P2'
    if all(game(m) == "P1" or game(m) == "P2" for m in moves(h)): return 'B2'

#перебор ходов(лучше делать небольшим и в последствии прибавлять
for i in range(1, 200):
    #19. Найдите минимальное значение S,
    # при котором Петя не может выиграть за один ход,
    # но Ваня может выиграть своим первым ходом после любого хода Пети
    # !!!!!!!!!(ТО ЕСТЬ B1)!!!!!!!!!!!!
    # ОТВЕТ: 12
    # if game(i) == "B1":
    #     print(i,game(i))
    #     break

    #20. Найдите !!два!! наименьших значения S, когда Петя имеет выигрышную стратегию,
    # причём одновременно выполняются два условия:
    # –Петя не может выиграть за один ход;
    # –Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
    # ТО ЕСТЬ P2!!!!
    # Найденные значения запишите в ответе в !!порядке возрастания!!.
    # вывело: 4 10 11 12
    # ОТВЕТ: 4 10
    # if game(i) == "P2":
    #     print(i,game(i))

    #21. Найдите значение S, при котором одновременно выполняются два условия:
    # – у Вани есть выигрышная стратегия,
    #   позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
    # – у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
    #   !!(ТО ЕСТЬ B2 так как нельзя 1м ходом)!!!
    # вывело: 9
    # ответ: 9
    if game(i)=='B2':
        print(i,game(i))





















#НЕПРАВИЛЬНО ДОДЕЛАТЬ
# 
# def fun(s1, s2, p):
#     if (s1 + s2) >= 80: return p % 2 == 0
#     if p == 0: return 0
#     game = [fun(s1 + 1, s2, p - 1), fun(s1, s2 + 1, p - 1), fun(s1 + s2, s2, p - 1),fun(s1, s2 + s1, p - 1)]
#     return any(game) if (p - 1) % 2 == 0 else (all(game))
# #ВАНЯ ХОДЫ - 2 4
# #Петя ходы 1 3
# 
# print('19: ', [s for s in range(1, 72) if fun(8, s, 2)])
# print('20: ', [s for s in range(1, 72) if fun(8, s, 3) > fun(8, s, 1)])
# #4>2 значит что нет стратегии на 1й ход
# print('21: ',  [s for s in range(1, 72) if fun(8, s, 4) > fun(8, s, 2)])

